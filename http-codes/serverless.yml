service: cad-api

provider:
  name: aws
  runtime: java8
  region: eu-west-1
  timeout: 10
  memorySize: 256
 
package:
  artifact: target/http-codes.jar
  
custom:
  dynamoTable: httpCodeStatistics
        
functions:
  #######
  configuration:
    handler: devoxx.serverless.api.ConfigurationGetHandler
    role: lambdaConfigurationRole
    events:
      - http:
          private: true
          method: get
          path: configuration/
          cors: true
  ######
  getCodes:
    handler: devoxx.serverless.api.CodesStatisticsGetHandler
    role: lambdaGetCodesRole
    environment:
      TARGET_DYNAMO_TABLE_NAME: ${self:custom.dynamoTable}
    events:
      - http:
          private: true
          path: codes
          method: get
          cors: true
    ######
  putCode:
    handler: devoxx.serverless.api.CodePutHandler
    role: lambdaPutCodeRole
    environment:
      TARGET_DYNAMO_TABLE_NAME: ${self:custom.dynamoTable}
    events:
      - http:
          private: true
          path: code/{userId}
          method: put
          cors: true
resources:
  Resources:
### dynamo ###
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: HttpCodeStatistics
      AttributeDefinitions:
      - AttributeName: Code
        AttributeType: N
      - AttributeName: Occurences
        AttributeType: N
      KeySchema:
      - AttributeName: Code
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 100
        WriteCapacityUnits: 100

### Roles ####

    # lambda -> logs
    lambdaVersionRole: ${file(./serverless.d/roles.yml):lambdaVersionRole}
    # lambda -> firehose + logs
    lambdaGeolocationKinesisRole: ${file(./serverless.d/roles.yml):lambdaGeolocationKinesisRole}
    # lambda -> s3 + logs
    lambdaContextS3Role: ${file(./serverless.d/roles.yml):lambdaContextS3Role}
    # firehose -> s3 + logs
    kinesisGeolocationDeliveryRole: ${file(./serverless.d/roles.yml):kinesisGeolocationDeliveryRole}
    # lambda role to fetch user usual places from elasticsearch
    usualPlacesLambdaRole: ${file(./serverless.d/roles.yml):usualPlacesLambdaRole}